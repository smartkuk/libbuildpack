// Code generated by MockGen. DO NOT EDIT.
// Source: supplier.go

// Package shims_test is a generated GoMock package.
package shims_test

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDetector is a mock of Detector interface
type MockDetector struct {
	ctrl     *gomock.Controller
	recorder *MockDetectorMockRecorder
}

// MockDetectorMockRecorder is the mock recorder for MockDetector
type MockDetectorMockRecorder struct {
	mock *MockDetector
}

// NewMockDetector creates a new mock instance
func NewMockDetector(ctrl *gomock.Controller) *MockDetector {
	mock := &MockDetector{ctrl: ctrl}
	mock.recorder = &MockDetectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDetector) EXPECT() *MockDetectorMockRecorder {
	return m.recorder
}

// Detect mocks base method
func (m *MockDetector) Detect() error {
	ret := m.ctrl.Call(m, "Detect")
	ret0, _ := ret[0].(error)
	return ret0
}

// Detect indicates an expected call of Detect
func (mr *MockDetectorMockRecorder) Detect() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Detect", reflect.TypeOf((*MockDetector)(nil).Detect))
}

// MockLifecycleBinaryRunner is a mock of LifecycleBinaryRunner interface
type MockLifecycleBinaryRunner struct {
	ctrl     *gomock.Controller
	recorder *MockLifecycleBinaryRunnerMockRecorder
}

// MockLifecycleBinaryRunnerMockRecorder is the mock recorder for MockLifecycleBinaryRunner
type MockLifecycleBinaryRunnerMockRecorder struct {
	mock *MockLifecycleBinaryRunner
}

// NewMockLifecycleBinaryRunner creates a new mock instance
func NewMockLifecycleBinaryRunner(ctrl *gomock.Controller) *MockLifecycleBinaryRunner {
	mock := &MockLifecycleBinaryRunner{ctrl: ctrl}
	mock.recorder = &MockLifecycleBinaryRunnerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLifecycleBinaryRunner) EXPECT() *MockLifecycleBinaryRunnerMockRecorder {
	return m.recorder
}

// RunBuild mocks base method
func (m *MockLifecycleBinaryRunner) RunBuild() error {
	ret := m.ctrl.Call(m, "RunBuild")
	ret0, _ := ret[0].(error)
	return ret0
}

// RunBuild indicates an expected call of RunBuild
func (mr *MockLifecycleBinaryRunnerMockRecorder) RunBuild() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunBuild", reflect.TypeOf((*MockLifecycleBinaryRunner)(nil).RunBuild))
}
